/*
Importar los modulos
*/
const express= require('express');
const bodyParser= require('body-parser');

/* 
Iniciar la configuracion
*/
const app= express();
app.use(bodyParser.json());
//FormData y lo pasa-convierte a formato JSON (FORMDATA =>JSON)
app.use(bodyParser.urlencoded({extended: true}));



const port= 3300;

/* 
HTTP: 
=>PETICION => SOLICITA, ENVIA INFORMACION DE UN RECURSO
          =>GET => SE USA PARA SOLICITAR CONSULTAR OBTENER UN RECURSO
          =>POST => ENVIAR INFORMACION PARA CREAR UN NUEVO RECURSO.
          =>PUT =>ACTUALIZAR LA INFORMACION DE UN RECURSO.
          =>DELETE =>ELIMINAR UN RECURSO.
=>RESPUESTA => CONTIENE LA INFORMACION O EL ESTADO DE LA PETICION.
          100-199 =>INFORMATIVOS.
          200-299 =>INFORMAN SI SE EJECUTO CORRECTAMENTE LA PETICION.
          300-399 =>REDIRECCIONAR PETICIONES.
          400-499 =>INFORMA ERRORES DEL CLIENTE (ASOCIADOS A LA PROGRAMACION).
          500-599 =>ERRORES DEL SERVIDOR.

CABEVERAS (HEADERS)
          =>INFORMACION ADICIONAL QUE DESCRIBE A LA PETICION/RESPUESTA.
CUERPO (BODY)
          => INFORMACION MENSAJE QUE SE ENVIA AL SERVIDOR CLIENTE
URL => UNIFORM RESOURCE LOCATION.
    =>HTTP:// => PROTOCOLO
    => LOCALHOST => HOST/SERVIDOR
    => :3000 => PUERTO
    => /ZZZZ/XXXX/YYYY =>PATH RESOURCE.
    => ?VARIABLE=VALOR&VARIABLE=VALOR => QUERY STRING, DATOS QUE SE ENVIAN.

*/

/* 
Iniciar las Rutas
*/
app.get("/prueba", function(request, response){
          //Procesar la Peticion
          let nombres= "Camilo Andres Ortiz Varilla";
          //Enviar la Respuesta
          response.send(nombres);
});
app.get("/misiontic", function(request, response){
          response.send("MI primera API");
});
app.post("/crear", function(req, res){
          let data= req.body;
          res.send({
                    "mensaje": "Capturando informacion del cuerpo",
                    "cuerpo": data
          });
});

app.put("/actualizar", function(req,res){
          let cuerpo= req.body;
          let queryString= req.query;

          
          res.send({
                    "mensaje":"Datos del cuerpo y QueryString",
                    "query": queryString,
                    "cuerpo": cuerpo
          })
});

app.delete("/eliminar/:id/:nombre/:apellido", function (req, res){
          let id= req.params.id;
          let nombre= req.params.nombre;
          let apellido= req.params.apellido;
          res.send({
                    "mensaje": "Leyendo Parametros",
                    "parametros":[id, nombre, apellido]
          })
})

/*
Configurar Donde el API va a estar monitoreando peticiones.
*/
app.listen(port, function(){
console.log("API Ejecutandose en el PUERTO" + port);
});